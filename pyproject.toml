[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "expy"
version = "0.0.1"
description = "A minimal AI experimentation framework"
readme = "README.md"
authors = [
  { name = "Kerry Cerqueira", email = "kerrycerqueira@gmail.com" }
]
dependencies = [
	"langgraph>=0.4.1",
	"pydantic>=2.11.4",
	"nbclient>=0.10.2",
	"typer>=0.9.0",
	"gitpython>=3.1.44",
]
requires-python = ">=3.13"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 79

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
  "AIR",   ## Airflow
  "ERA",   ## eradicate
  "FAST",  ## FastAPI
  "YTT",   ## flake8-2020
  "ANN",   ## flake8-annotations
  "ASYNC", ## flake8-async
  "S",     ## flake8-bandit
  "BLE",   ## flake8-blind-except
  "FBT",   ## flake8-boolean-trap
  "B",     ## flake8-bugbear
  "A",     ## flake8-builtins
  "COM",   ## flake8-commas
  "C4",    ## flake8-comprehensions
  "CPY",   ## flake8-copyright
  "DTZ",   ## flake8-datetimez
  "T10",   ## flake8-debugger
  "DJ",    ## flake8-django
  "EM",    ## flake8-errmsg
  "EXE",   ## flake8-executable
  "FIX",   ## flake8-fixme
  "FA",    ## flake8-future-annotations
  "INT",   ## flake8-gettext
  "ISC",   ## flake8-implicit-str-concat
  "ICN",   ## flake8-import-conventions
  "LOG",   ## flake8-logging
  "G",     ## flake8-logging-format
  "INP",   ## flake8-no-pep420
  "PIE",   ## flake8-pie
  "T20",   ## flake8-print
  "PYI",   ## flake8-pyi
  "PT",    ## flake8-pytest-style
  "Q",     ## flake8-quotes
  "RSE",   ## flake8-raise
  "RET",   ## flake8-return
  "SLF",   ## flake8-self
  "SIM",   ## flake8-simplify
  "SLOT",  ## flake8-slots
  "TID",   ## flake8-tidy-imports
  "TD",    ## flake8-todos
  "TC",    ## flake8-type-checking
  "ARG",   ## flake8-unused-arguments
  "PTH",   ## flake8-use-pathlib
  "FLY",   ## flynt
  "I",     ## isort
  "C90",   ## mccabe
  "NPY",   ## NumPy-specific rules
  "PD",    ## pandas-vet
  "N",     ## pep8-naming
  "PERF",  ## Perflint
  "E",     ## pycodestyle -> Error
  "W",     ## pycodestyle -> Warning
  "DOC",   ## pydoclint
  "D",     ## pydocstyle
  "F",     ## Pyflakes
  "PGH",   ## pygrep-hooks
  "PLC",   ## Pylint -> Convention
  "PLE",   ## Pylint -> Error
  "PLR",   ## Pylint -> Refactor
  "PLW",   ## Pylint -> Warning
  "UP",    ## pyupgrade
  "FURB",  ## refurb
  "RUF",   ## Ruff-specific rules
  "TRY",   ## tryceratops
]
ignore = [
	"D206",
	"W191"
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 72
ignore-overlong-task-comments = true

[project.scripts]
expy = "expy.cli:expy"

